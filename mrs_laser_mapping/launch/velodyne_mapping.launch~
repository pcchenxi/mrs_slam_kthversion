<launch>
  <arg name="scan_assembler_frame_id" default="/base_link"/>
  <arg name="bagfile" default="/home/droeschel/bags/velodyne_kth/building_back_1.bag"/>
  <arg name="bagfile_nsh" default="/home/droeschel/bags/nsh_indoor_outdoor.bag"/>
  <arg name="rate" default="0.25"/>
  <param name="/use_sim_time" value="true" />

  <node name="config_server" pkg="config_server" type="config_server" output="screen" required="false">
    <param name="config_path" value="$(find mrs_laser_mapping)/config" />
    <param name="robot_name" value="velodyne" />
  </node>
  
  <!--<node name="rviz_$(anon rviz)" pkg="rviz" type="rviz" args="-d $(find mrs_laser_mapping)/launch/velodyne_mapping.rviz" required="true" output="screen"/>-->
	
	<node if="0" pkg="tf" name="static_laser_transform" type="static_transform_publisher" args="0 0 0 0 0 0 1 base_link velodyne 10" /> 
	
	<node if="0" pkg="rosbag" type="play" name="play" args="-r $(arg rate) --clock --start=0 -d 0 -u 20 $(arg bagfile)" output="screen" respawn="false" />

	<node pkg="nodelet" type="nodelet" name="mapping_nodelet"  args="manager" output="screen"/>
		
	<!-- local mapping -->
	<node if="1"  pkg="nodelet" type="nodelet" name="map_nodelet" args="load mrs_laser_mapping/map_nodelet mapping_nodelet" output="screen" >
		<remap from="~input" to="/velodyne_points_crop" />
	
		<!-- frame id in which the scanlines are assembled -->
		<param name="scan_assembler_frame_id" type="str" value="$(arg scan_assembler_frame_id)" />
			
		<!-- frame id of the sensor (for raytracing) -->
		<param name="sensor_frame_id" type="str" value="/velodyne" />
			
    <!-- first n scans are not registered to the map (e.g if robot is standing) -->
	  <param name="min_scans_registration" type="int" value="2" />
	  
	  <!-- first n local maps are not published to the global mapping (to avoid sparse maps in alloc. map) -->
		<param name="min_scans_for_map_publishing" type="int" value="8" />
		
		<!-- duration in seconds for waiting for a transform  -->
		<param name="transform_wait_duration" type="double" value="0.2" />

		<!-- parameters for registration -->
		<param name="registration_max_iterations" type="int" value="100" />
		<param name="registration_prior_prob" type="double" value="0.25" />
		<param name="registration_soft_assoc_c1" type="double" value="0.9" />
		<param name="registration_soft_assoc_c2" type="int" value="10" />
		<param name="registration_sigma_size_factor" type="double" value="0.45" /> 

		<!-- parameters for the local map -->
    <param name="map_size" type="int" value="128" />
    <param name="map_resolution" type="double" value="16.0" />
    <param name="map_levels" type="int" value="4" />
    <param name="map_cell_capacity" type="int" value="2500" />

    <!-- parameters for downsampled map (for visualization) -->
    <param name="map_downsampled_size" type="int" value="32" />
    <param name="map_downsampled_resolution" type="double" value="16.0" />
    <param name="map_downsampled_levels" type="int" value="4" />
    <param name="map_downsampled_cell_capacity" type="int" value="100" />
		
		<!-- add scans when troso is rotated. Set to false if torso rotation results in artifacts. Default: true-->
		<param name="add_scans_when_torso_rotated" type="bool" value="true" />
		
		<param name="decrease_rate" type="double" value="0.0" />
	</node>
	
  <!-- Run a passthrough filter to cut ceiling -->
  <node pkg="nodelet" type="nodelet" name="passthrough" args="load pcl/PassThrough mapping_nodelet" output="screen">
    <remap from="~input" to="/mapping_nodelet/pointcloud" />
    <remap from="~ouput" to="/mapping_nodelet/pointcloud_cut" />
    <rosparam>
      filter_field_name: z
      filter_limit_min: -3.0
      filter_limit_max: 2.5
      filter_limit_negative: False
    </rosparam>
  </node>
  
  <!-- Run a passthrough filter to cut ceiling -->
  <node pkg="nodelet" type="nodelet" name="cropbox" args="load pcl/CropBox mapping_nodelet" output="screen">
    <remap from="~input" to="/velodyne_points" />
    <remap from="~output" to="/velodyne_points_crop" />
    <rosparam>
      min_x: -2.0
      max_x: 2.0
      min_y: -1.0
      max_y: 1.0
      min_z: -1.0
      max_z: 1.0
      negative: True
    </rosparam>
  </node>

   <node pkg="nodelet" type="nodelet" name="box_filter" args="load load mod_laser_filters/box_filter_nodelet mapping_nodelet" output="screen"/>

  
</launch>
		
